// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using PruebaP.Models;

namespace PruebaP.Migrations
{
    [DbContext(typeof(MyDBContext))]
    [Migration("20200709042956_FirstMigration")]
    partial class FirstMigration
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("PruebaP.Models.Clientes", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("NIT")
                        .HasColumnType("int");

                    b.Property<string>("correo")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("nombre")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("clientes");
                });

            modelBuilder.Entity("PruebaP.Models.Paises", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("nombrePais")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("paises");
                });

            modelBuilder.Entity("PruebaP.Models.Servicios", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fk_ClienteId")
                        .HasColumnType("int");

                    b.Property<string>("nombreServicio")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("valorxHora")
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("fk_ClienteId");

                    b.ToTable("servicios");
                });

            modelBuilder.Entity("PruebaP.Models.Servicios_Pais", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("fK_IdServicioId")
                        .HasColumnType("int");

                    b.Property<int?>("fk_IdPaisId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("fK_IdServicioId");

                    b.HasIndex("fk_IdPaisId");

                    b.ToTable("servicios_pais");
                });

            modelBuilder.Entity("PruebaP.Models.Servicios", b =>
                {
                    b.HasOne("PruebaP.Models.Clientes", "fk_Cliente")
                        .WithMany()
                        .HasForeignKey("fk_ClienteId");
                });

            modelBuilder.Entity("PruebaP.Models.Servicios_Pais", b =>
                {
                    b.HasOne("PruebaP.Models.Servicios", "fK_IdServicio")
                        .WithMany()
                        .HasForeignKey("fK_IdServicioId");

                    b.HasOne("PruebaP.Models.Paises", "fk_IdPais")
                        .WithMany()
                        .HasForeignKey("fk_IdPaisId");
                });
#pragma warning restore 612, 618
        }
    }
}
